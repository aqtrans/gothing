image: golang:latest

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - vendor/

before_script:
  - ln -s /builds /go/src/jba.io
  - cd /go/src/jba.io/go/thing
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

stages:
  - install-environment
  - get-deps
  - build-css
  - build
  - test
  - deploy  

install-go:
  stage: install-environment
  script:
    - go version
    - echo $PATH
    - echo $GOPATH
    - go env
    - which go
  
get-deps:
  stage: get-deps
  script:
    - curl -o dep -sL https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64
    - chmod +x dep
    - ./dep ensure -v
    - go get -d -v

build-css:
  stage: build-css
  script:
    - curl -sL https://deb.nodesource.com/setup_6.x | bash -
    - apt-get update -y && apt-get install -y nodejs
    - npm install -g bower gulp    
    - /bin/sh ./build_css.sh
  artifacts:
    expire_in: 1 day
    paths: 
      - assets/css/thing.css
      - assets/css/thing.css.map 

build-my-project:
  stage: build
  script:
    - go get -d -v  
    - go build -o ./thing
  artifacts:
    expire_in: 1 day
    paths:
      - thing

test-my-project:
  stage: test
  coverage: '/coverage: \d+\.\d+/'
  script:
    - go get -d -v  
    - go test -v
    - go test -race
    - go test -cover

deploy_staging:
  stage: deploy
  variables:
    DEPLOY_HOST: 'golang@192.168.1.100'
    SERVICE_MANAGER: 'systemctl --user'
  script:
    # scp to fresh folder
    - scp -r ./ $DEPLOY_HOST:$CI_PROJECT_NAME.$CI_COMMIT_SHA
    # Stop app, to release DB locks
    - ssh $DEPLOY_HOST $SERVICE_MANAGER stop golang@$CI_PROJECT_NAME    
    # If $CI_PROJECT_NAME exists, and is not a symlink, fail here since the next step fails otherwise
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME -a ! -L $CI_PROJECT_NAME; then echo ERROR $CI_PROJECT_NAME is not a symlink && exit 1; fi'"
    # If $CI_PROJECT_NAME.new exists, fail here since this is a sign of a failed previous deployment
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME.new; then echo ERROR $CI_PROJECT_NAME.new exists && exit 1; fi'"
    # Create symlink from $CI_PROJECT_NAME.$CI_COMMIT_SHA to $CI_PROJECT_NAME.new
    - ssh $DEPLOY_HOST ln -sv $CI_PROJECT_NAME.$CI_COMMIT_SHA $CI_PROJECT_NAME.new
    # Move $CI_PROJECT_NAME.new into place, overwriting old symlink
    - ssh $DEPLOY_HOST mv -T $CI_PROJECT_NAME.new $CI_PROJECT_NAME
    # Restart app
    - ssh $DEPLOY_HOST $SERVICE_MANAGER start golang@$CI_PROJECT_NAME
  environment:
    name: staging
    url: http://thing.rick.jba.io
  when: manual

deploy_prod:
  stage: deploy
  variables:
    DEPLOY_HOST: 'golang@frink.jba.io'
    # using sudo due to no systemctl --user on CentOS 7 (https://bugs.centos.org/view.php?id=8767)
    SERVICE_MANAGER: 'sudo systemctl'
  script:
    # scp to fresh folder
    - scp -r ./ $DEPLOY_HOST:$CI_PROJECT_NAME.$CI_COMMIT_SHA
    # Stop app, to release DB locks
    - ssh $DEPLOY_HOST $SERVICE_MANAGER stop golang@$CI_PROJECT_NAME    
    # If $CI_PROJECT_NAME exists, and is not a symlink, fail here since the next step fails otherwise
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME -a ! -L $CI_PROJECT_NAME; then echo ERROR $CI_PROJECT_NAME is not a symlink && exit 1; fi'"
    # If $CI_PROJECT_NAME.new exists, fail here since this is a sign of a failed previous deployment
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME.new; then echo ERROR $CI_PROJECT_NAME.new exists && exit 1; fi'"    
    # Create symlink from $CI_PROJECT_NAME.$CI_COMMIT_SHA to $CI_PROJECT_NAME.new
    - ssh $DEPLOY_HOST ln -sv $CI_PROJECT_NAME.$CI_COMMIT_SHA $CI_PROJECT_NAME.new
    # Move $CI_PROJECT_NAME.new into place, overwriting old symlink
    - ssh $DEPLOY_HOST mv -T $CI_PROJECT_NAME.new $CI_PROJECT_NAME
    # Restart app
    - ssh $DEPLOY_HOST $SERVICE_MANAGER start golang@$CI_PROJECT_NAME
  environment:
    name: production
    url: https://squanch.space
  only:
    - master
